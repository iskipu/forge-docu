"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2278],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,y=c["".concat(p,".").concat(d)]||c[d]||g[d]||i;return n?a.createElement(y,o(o({ref:t},s),{},{components:n})):a.createElement(y,o({ref:t},s))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(8168),r=(n(6540),n(5680));const i={description:"Quickly scaffold an Electron project with a full build pipeline",slug:"/"},o="Getting Started",l={unversionedId:"README",id:"README",title:"Getting Started",description:"Quickly scaffold an Electron project with a full build pipeline",source:"@site/docs/README.md",sourceDirName:".",slug:"/",permalink:"/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/README.md",tags:[],version:"current",frontMatter:{description:"Quickly scaffold an Electron project with a full build pipeline",slug:"/"},sidebar:"tutorialSidebar",next:{title:"Importing an Existing Project",permalink:"/import-existing-project"}},p={},u=[{value:"Overview",id:"overview",level:2},{value:"Creating a new app",id:"creating-a-new-app",level:2},{value:"Using templates",id:"using-templates",level:3},{value:"Starting your app",id:"starting-your-app",level:2},{value:"Building distributables",id:"building-distributables",level:2},{value:"Publishing your app",id:"publishing-your-app",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2}],s={toc:u},c="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"getting-started"},"Getting Started"),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,"Electron Forge is an all-in-one tool for packaging and distributing Electron applications. It combines many single-purpose packages to create a full build pipeline that works out of the box, complete with code signing, installers, and artifact publishing. For advanced workflows, custom build logic can be added in the Forge lifecycle through its ",(0,r.yg)("a",{parentName:"p",href:"config/plugins/"},"Plugin API"),". Custom build and storage targets can be handled by creating your own ",(0,r.yg)("a",{parentName:"p",href:"config/makers/"},"Makers")," and ",(0,r.yg)("a",{parentName:"p",href:"config/publishers/"},"Publishers"),"."),(0,r.yg)("h2",{id:"creating-a-new-app"},"Creating a new app"),(0,r.yg)("p",null,"To get started with Electron Forge, we first need to initialize a new project with ",(0,r.yg)("inlineCode",{parentName:"p"},"create-electron-app"),". This script is a convenient wrapper around Forge's ",(0,r.yg)("a",{parentName:"p",href:"/cli#Init"},"Init")," command."),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Electron Forge currently only supports npm and Yarn Classic. If you are using Yarn >=2, please use the ",(0,r.yg)("inlineCode",{parentName:"p"},"nodeLinker: node-modules")," install mode.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm init electron-app@latest my-app\n")),(0,r.yg)("h3",{id:"using-templates"},"Using templates"),(0,r.yg)("p",null,"Forge's initialization scripts can add additional template code with the ",(0,r.yg)("inlineCode",{parentName:"p"},"--template=[template-name]")," flag."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm init electron-app@latest my-app -- --template=webpack\n")),(0,r.yg)("p",null,"There are currently four first-party templates:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"webpack")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"webpack-typescript")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"vite")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"vite-typescript"))),(0,r.yg)("p",null,"Both of these templates are built around plugins that bundle your JavaScript code for production and includes a dev server to provide a better developer experience."),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"We highly recommend using these templates when initializing your app to take advantage of modern front-end JavaScript tooling.")),(0,r.yg)("p",null,"To learn more about authoring your own templates for Electron Forge, check out the ",(0,r.yg)("a",{parentName:"p",href:"/advanced/extending-electron-forge/writing-templates"},"Writing Templates")," guide!"),(0,r.yg)("h2",{id:"starting-your-app"},"Starting your app"),(0,r.yg)("p",null,"You should now have a directory called ",(0,r.yg)("inlineCode",{parentName:"p"},"my-app")," with all the files you need for a basic Electron app."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd my-app\nnpm start\n")),(0,r.yg)("h2",{id:"building-distributables"},"Building distributables"),(0,r.yg)("p",null,"So you've got an ",(0,r.yg)("strong",{parentName:"p"},"amazing")," application there, and you want to package it all up and share it with the world. If you run the ",(0,r.yg)("inlineCode",{parentName:"p"},"make")," script, Electron Forge will generate you platform specific distributables for you to share with everyone. For more information on what kind of distributables you can make, check out the ",(0,r.yg)("a",{parentName:"p",href:"config/makers/"},"Makers")," documentation."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm run make\n")),(0,r.yg)("h2",{id:"publishing-your-app"},"Publishing your app"),(0,r.yg)("p",null,"Now you have distributables that you can share with your users. If you run the ",(0,r.yg)("inlineCode",{parentName:"p"},"publish")," script, Electron Forge will then publish the platform-specific distributables for you, using the publishing method of your choice. For example, if you want to publish your assets to GitHub, you can install the GitHub publisher dependency using:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @electron-forge/publisher-github\n")),(0,r.yg)("p",null,"Once you have ",(0,r.yg)("a",{parentName:"p",href:"config/publishers/github"},"configured the publisher according to the documentation"),", run the following command to upload your distributables:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm run publish\n")),(0,r.yg)("p",null,"For more information on what publishers we currently support, check out the ",(0,r.yg)("a",{parentName:"p",href:"config/publishers/"},"Publishers")," documentation."),(0,r.yg)("h2",{id:"advanced-usage"},"Advanced Usage"),(0,r.yg)("p",null,"Once you've got a basic app starting, building and publishing, it's time to add your custom configuration, which can be done in the ",(0,r.yg)("inlineCode",{parentName:"p"},"forge.config.js")," file. Configuration options are specified in the ",(0,r.yg)("a",{parentName:"p",href:"https://www.electronforge.io/configuration"},"Configuration Docs"),"."),(0,r.yg)("p",null,"You can also check out the documentation on some of our more advanced features like:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"config/plugins/"},"Adding plugins")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/advanced/debugging"},"Debugging your app")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"advanced/extending-electron-forge/"},"Writing your own makers, publishers and plugins"))))}g.isMDXComponent=!0}}]);