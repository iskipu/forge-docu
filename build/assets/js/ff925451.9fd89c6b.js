"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9907],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>d});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,d=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return t?r.createElement(d,o(o({ref:n},g),{},{components:t})):r.createElement(d,o({ref:n},g))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6887:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(8168),a=(t(6540),t(5680));const i={description:"Import an existing Electron project to use Electron Forge.",layout:{title:{visible:!0},description:{visible:!0},tableOfContents:{visible:!0},outline:{visible:!0},pagination:{visible:!0}}},o="Importing an Existing Project",l={unversionedId:"import-existing-project",id:"import-existing-project",title:"Importing an Existing Project",description:"Import an existing Electron project to use Electron Forge.",source:"@site/docs/import-existing-project.md",sourceDirName:".",slug:"/import-existing-project",permalink:"/import-existing-project",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/import-existing-project.md",tags:[],version:"current",frontMatter:{description:"Import an existing Electron project to use Electron Forge.",layout:{title:{visible:!0},description:{visible:!0},tableOfContents:{visible:!0},outline:{visible:!0},pagination:{visible:!0}}},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/"},next:{title:"CLI",permalink:"/cli"}},p={},s=[{value:"Using the import script",id:"using-the-import-script",level:2},{value:"Setting up Forge manually",id:"setting-up-forge-manually",level:2},{value:"Installing dependencies",id:"installing-dependencies",level:3},{value:"Configuring package.json",id:"configuring-packagejson",level:3},{value:"Adding Squirrel.Windows boilerplate",id:"adding-squirrelwindows-boilerplate",level:3},{value:"Optional: publishing your app",id:"optional-publishing-your-app",level:3}],g={toc:s},c="wrapper";function u(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"importing-an-existing-project"},"Importing an Existing Project"),(0,a.yg)("p",null,"If you already have an Electron app and want to try out Electron Forge, you can either use Forge's ",(0,a.yg)("inlineCode",{parentName:"p"},"import")," script or manually configure Forge yourself."),(0,a.yg)("p",null,"These steps will get you set up with a basic build pipeline that can create ",(0,a.yg)("a",{parentName:"p",href:"/config/makers/squirrel.windows"},"squirrel.windows.md")," (Windows),\n",(0,a.yg)("a",{parentName:"p",href:"config/makers/zip/"},"zip.md")," (macOS), and\n",(0,a.yg)("a",{parentName:"p",href:"config/makers/deb/"},"deb.md")," (Linux) installers when running ",(0,a.yg)("inlineCode",{parentName:"p"},"electron-forge make"),"."),(0,a.yg)("h2",{id:"using-the-import-script"},"Using the import script"),(0,a.yg)("p",null,"Importing an existing Electron app into the Electron Forge workflow can be done automatically using Forge's ",(0,a.yg)("inlineCode",{parentName:"p"},"import")," command."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},'cd my-app\nnpm install --save-dev @electron-forge/cli\nnpm exec --package=@electron-forge/cli -c "electron-forge import"\n')),(0,a.yg)("p",null,"This script will set up Forge to package your app and build installers for it."),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"If you're already using other Electron tooling, it will try to automatically migrate the settings as much as possible, but some of it may need to be migrated manually.")),(0,a.yg)("h2",{id:"setting-up-forge-manually"},"Setting up Forge manually"),(0,a.yg)("p",null,"If the import script does not work for some reason, you can also install Forge manually. To get identical behavior to the script, follow the steps below."),(0,a.yg)("h3",{id:"installing-dependencies"},"Installing dependencies"),(0,a.yg)("p",null,"First, install Forge's CLI and the target Makers as devDependencies in your project."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd my-app\nnpm install --save-dev @electron-forge/cli @electron-forge/maker-squirrel @electron-forge/maker-deb @electron-forge/maker-zip\n")),(0,a.yg)("h3",{id:"configuring-packagejson"},"Configuring package.json"),(0,a.yg)("p",null,"To start using Forge, add a few command scripts to your package.json file:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  // ...\n  "scripts": {\n    "start": "electron-forge start",\n    "package": "electron-forge package",\n    "make": "electron-forge make",\n    "publish": "electron-forge publish"\n  }\n  // ...\n}\n')),(0,a.yg)("p",null,"Then, set up your Forge ",(0,a.yg)("a",{parentName:"p",href:"/config/configuration",title:"mention"},"configuration.md")," in the ",(0,a.yg)("inlineCode",{parentName:"p"},"config.forge")," field in package.json."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  // ...\n  "config": {\n    "forge": {\n      "packagerConfig": {},\n      "makers": [\n        {\n          "name": "@electron-forge/maker-squirrel",\n          "config": {\n            "name": "electron_quick_start"\n          }\n        },\n        {\n          "name": "@electron-forge/maker-zip",\n          "platforms": ["darwin"]\n        },\n        {\n          "name": "@electron-forge/maker-deb",\n          "config": {}\n        },\n        {\n          "name": "@electron-forge/maker-rpm",\n          "config": {}\n        }\n      ]\n    }\n  }\n  // ...\n}\n')),(0,a.yg)("p",null,"In the above object, we configure each Maker that we installed into the ",(0,a.yg)("inlineCode",{parentName:"p"},"makers")," array. We also create an empty ",(0,a.yg)("inlineCode",{parentName:"p"},"packagerConfig")," object that you should edit to your app's packaging needs."),(0,a.yg)("h3",{id:"adding-squirrelwindows-boilerplate"},"Adding Squirrel.Windows boilerplate"),(0,a.yg)("p",null,"When distributing a ",(0,a.yg)("a",{parentName:"p",href:"/config/makers/squirrel.windows",title:"mention"},"squirrel.windows.md")," app, we recommend installing ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/mongodb-js/electron-squirrel-startup"},(0,a.yg)("inlineCode",{parentName:"a"},"electron-squirrel-startup"))," as a runtime dependency to handle Squirrel events."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd my-app\nnpm install electron-squirrel-startup\n")),(0,a.yg)("p",null,"Then, add the following snippet as early as possible in the main process execution (before the ",(0,a.yg)("inlineCode",{parentName:"p"},"app.ready")," event)."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript",metastring:'title="main.js"',title:'"main.js"'},'if (require("electron-squirrel-startup")) app.quit();\n')),(0,a.yg)("h3",{id:"optional-publishing-your-app"},"Optional: publishing your app"),(0,a.yg)("p",null,"You can also configure Forge to upload your release artifacts to a self-hosted release server such as ",(0,a.yg)("a",{parentName:"p",href:"/config/publishers/electron-release-server",title:"mention"},"electron-release-server.md")," or ",(0,a.yg)("a",{parentName:"p",href:"/config/publishers/nucleus",title:"mention"},"nucleus.md"),", or cloud storage providers such as ",(0,a.yg)("a",{parentName:"p",href:"/config/publishers/s3",title:"mention"},"s3.md"),"."),(0,a.yg)("p",null,"For example, for the S3 Publisher:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd my-app\nnpm install --save-dev @electron-forge/publisher-s3\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  // ...\n  "config": {\n    "forge": {\n      "packagerConfig": {},\n      "makers": [\n        /* ... */\n      ],\n      "publishers": [\n        {\n          "name": "@electron-forge/publisher-s3",\n          "platforms": ["darwin", "linux"],\n          "config": {\n            "bucket": "my-bucket",\n            "folder": "my/key/prefix"\n          }\n        }\n      ]\n    }\n  }\n  // ...\n}\n')),(0,a.yg)("p",null,"See the ",(0,a.yg)("a",{parentName:"p",href:"config/publishers/",title:"mention"},"publishers")," documentation for more information."))}u.isMDXComponent=!0}}]);