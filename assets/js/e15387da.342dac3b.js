"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5915],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>d});var o=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),u=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return o.createElement(c.Provider,{value:n},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(t),f=r,d=s["".concat(c,".").concat(f)]||s[f]||g[f]||l;return t?o.createElement(d,a(a({ref:n},p),{},{components:t})):o.createElement(d,a({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,a=new Array(l);a[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[s]="string"==typeof e?e:r,a[1]=i;for(var u=2;u<l;u++)a[u]=t[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var o=t(8168),r=(t(6540),t(5680));const l={description:"Integrate a local build of Electron into your Forge app."},a="Local Electron Plugin",i={unversionedId:"config/plugins/local-electron",id:"version-old/config/plugins/local-electron",title:"Local Electron Plugin",description:"Integrate a local build of Electron into your Forge app.",source:"@site/versioned_docs/version-old/config/plugins/local-electron.md",sourceDirName:"config/plugins",slug:"/config/plugins/local-electron",permalink:"/forge-docu/config/plugins/local-electron",draft:!1,editUrl:"https://github.com/iskipu/forge-docu/edit/main/versioned_docs/version-old/config/plugins/local-electron.md",tags:[],version:"old",frontMatter:{description:"Integrate a local build of Electron into your Forge app."},sidebar:"tutorialSidebar",previous:{title:"Auto Unpack Native Modules Plugin",permalink:"/forge-docu/config/plugins/auto-unpack-natives"},next:{title:"Fuses Plugin",permalink:"/forge-docu/config/plugins/fuses"}},c={},u=[{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3}],p={toc:u},s="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(s,(0,o.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"local-electron-plugin"},"Local Electron Plugin"),(0,r.yg)("p",null,'{% hint style="info" %}\nThis plugin should only be used by people who are building Electron locally themselves. If you want to use a fork of Electron, check out the ',(0,r.yg)("a",{parentName:"p",href:"https://github.com/electron/get#usage"},"environment variables")," you can use to configure ",(0,r.yg)("inlineCode",{parentName:"p"},"@electron/get"),".\n{% endhint %}"),(0,r.yg)("p",null,"This plugin allows you to both run and build your app using a ",(0,r.yg)("strong",{parentName:"p"},"local")," build of Electron. This can be incredibly useful if you want to test a feature or a bug fix in your app before making a PR up to the Electron repository."),(0,r.yg)("p",null,"If you want to set up a local build of Electron, you should check out ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/electron/build-tools"},"Electron Build Tools"),"."),(0,r.yg)("h3",{id:"installation"},"Installation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @electron-forge/plugin-local-electron\n")),(0,r.yg)("h3",{id:"usage"},"Usage"),(0,r.yg)("p",null,"Once you have a working build of Electron, point the plugin's ",(0,r.yg)("inlineCode",{parentName:"p"},"electronPath")," config option to the folder containing the built Electron binary."),(0,r.yg)("p",null,"All possible configuration options are documented in ",(0,r.yg)("a",{parentName:"p",href:"https://js.electronforge.io/interfaces/_electron_forge_plugin_local_electron.LocalElectronPluginConfig.html"},(0,r.yg)("inlineCode",{parentName:"a"},"LocalElectronPluginConfig")),"."),(0,r.yg)("p",null,'{% code title="forge.config.js" %}'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"{\n  plugins: [\n    {\n      name: '@electron-forge/plugin-local-electron',\n      config: {\n        electronPath: '/Users/me/projects/electron/out/Testing'\n      }\n    }\n  ]\n}\n")),(0,r.yg)("p",null,"{% endcode %}"),(0,r.yg)("p",null,'{% hint style="info" %}\nPlease note that the plugin only accepts ',(0,r.yg)("strong",{parentName:"p"},"absolute paths"),". You should use Node's ",(0,r.yg)("a",{parentName:"p",href:"https://nodejs.org/api/path.html#pathresolvepaths"},(0,r.yg)("inlineCode",{parentName:"a"},"path.resolve()"))," to make things deterministic.\n{% endhint %}"))}g.isMDXComponent=!0}}]);