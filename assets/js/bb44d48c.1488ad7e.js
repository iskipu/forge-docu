"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4228],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>f});var o=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=o.createContext({}),c=function(e){var n=o.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return o.createElement(u.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=r,f=p["".concat(u,".").concat(d)]||p[d]||g[d]||a;return t?o.createElement(f,i(i({ref:n},s),{},{components:t})):o.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8064:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=t(8168),r=(t(6540),t(5680));const a={description:"Reduce loading times and disk consumption by unpacking native Node modules from your Forge app's ASAR archive."},i="Auto Unpack Native Modules Plugin",l={unversionedId:"config/plugins/auto-unpack-natives",id:"version-old/config/plugins/auto-unpack-natives",title:"Auto Unpack Native Modules Plugin",description:"Reduce loading times and disk consumption by unpacking native Node modules from your Forge app's ASAR archive.",source:"@site/versioned_docs/version-old/config/plugins/auto-unpack-natives.md",sourceDirName:"config/plugins",slug:"/config/plugins/auto-unpack-natives",permalink:"/forge-docu/config/plugins/auto-unpack-natives",draft:!1,editUrl:"https://github.com/iskipu/forge-docu/edit/main/versioned_docs/version-old/config/plugins/auto-unpack-natives.md",tags:[],version:"old",frontMatter:{description:"Reduce loading times and disk consumption by unpacking native Node modules from your Forge app's ASAR archive."},sidebar:"tutorialSidebar",previous:{title:"Electronegativity Plugin",permalink:"/forge-docu/config/plugins/electronegativity"},next:{title:"Local Electron Plugin",permalink:"/forge-docu/config/plugins/local-electron"}},u={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],s={toc:c},p="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,o.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"auto-unpack-native-modules-plugin"},"Auto Unpack Native Modules Plugin"),(0,r.yg)("p",null,"This plugin will automatically add all native Node modules in your ",(0,r.yg)("inlineCode",{parentName:"p"},"node_modules")," folder to the ",(0,r.yg)("a",{parentName:"p",href:"https://electron.github.io/electron-packager/main/interfaces/electronpackager.options.html#asar"},(0,r.yg)("inlineCode",{parentName:"a"},"asar.unpack"))," config option in your ",(0,r.yg)("a",{parentName:"p",href:"/forge-docu/config/configuration#electron-packager-config"},(0,r.yg)("inlineCode",{parentName:"a"},"packagerConfig")),". If your app uses native Node modules, you should probably use this to reduce loading times and disk consumption on your users' machines."),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev @electron-forge/plugin-auto-unpack-natives\n")),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("p",null,"You must add this plugin to your ",(0,r.yg)("a",{parentName:"p",href:"/forge-docu/config/configuration#plugins"},(0,r.yg)("inlineCode",{parentName:"a"},"plugins"))," array in your Forge configuration. There are currently no configuration options available for this plugin."),(0,r.yg)("p",null,'{% hint style="info" %}\nAsar archives are disabled by default with Electron Packager. Make sure you set your ',(0,r.yg)("inlineCode",{parentName:"p"},"packagerConfig.asar")," value accordingly. This option also supports advanced configuration if you pass it an object. See the ",(0,r.yg)("a",{parentName:"p",href:"https://js.electronforge.io/modules/_electron_forge_shared_types.InternalOptions.html#CreateOptions"},"API documentation for this option")," for more information.\n{% endhint %}"),(0,r.yg)("p",null,'{% code title="forge.config.js" %}'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  packagerConfig: {\n    asar: true // or an object containing your asar options\n  },\n  plugins: [\n    {\n      name: '@electron-forge/plugin-auto-unpack-natives',\n      config: {}\n    }\n  ]\n};\n")),(0,r.yg)("p",null,"{% endcode %}"))}g.isMDXComponent=!0}}]);