"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4319],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>f});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),g=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=g(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=g(n),y=i,f=s["".concat(c,".").concat(y)]||s[y]||u[y]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var g=2;g<o;g++)a[g]=n[g];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},3857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>g});var r=n(8168),i=(n(6540),n(5680));const o={description:"Check for misconfigurations and security anti-patterns with the Electronegativity tool."},a="Electronegativity Plugin",l={unversionedId:"config/plugins/electronegativity",id:"version-old/config/plugins/electronegativity",title:"Electronegativity Plugin",description:"Check for misconfigurations and security anti-patterns with the Electronegativity tool.",source:"@site/versioned_docs/version-old/config/plugins/electronegativity.md",sourceDirName:"config/plugins",slug:"/config/plugins/electronegativity",permalink:"/forge-docu/config/plugins/electronegativity",draft:!1,editUrl:"https://github.com/iskipu/forge-docu/edit/main/versioned_docs/version-old/config/plugins/electronegativity.md",tags:[],version:"old",frontMatter:{description:"Check for misconfigurations and security anti-patterns with the Electronegativity tool."},sidebar:"tutorialSidebar",previous:{title:"Vite Plugin",permalink:"/forge-docu/config/plugins/vite"},next:{title:"Auto Unpack Native Modules Plugin",permalink:"/forge-docu/config/plugins/auto-unpack-natives"}},c={},g=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:3}],p={toc:g},s="wrapper";function u(e){let{components:t,...n}=e;return(0,i.yg)(s,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"electronegativity-plugin"},"Electronegativity Plugin"),(0,i.yg)("p",null,"The Electronegativity plugin integrates Doyensec's ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/doyensec/electronegativity#electronegativity"},"Electronegativity tool")," into the Electron Forge workflow. After packaging your Electron app, it identifies any known misconfigurations and security anti-patterns."),(0,i.yg)("h2",{id:"installation"},"Installation"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev @electron-forge/plugin-electronegativity\n")),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("p",null,"Add this plugin to the ",(0,i.yg)("a",{parentName:"p",href:"/forge-docu/config/configuration#plugins"},(0,i.yg)("inlineCode",{parentName:"a"},"plugins"))," array in your Forge configuration. All ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/doyensec/electronegativity#programmatically"},"programmatic options for Electronegativity"),", except for ",(0,i.yg)("inlineCode",{parentName:"p"},"input")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"electronVersion"),"."),(0,i.yg)("h3",{id:"example"},"Example"),(0,i.yg)("p",null,'{% code title="forge.config.js" %}'),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  // ...\n  plugins: [\n    {\n      name: '@electron-forge/plugin-electronegativity',\n      config: {\n        isSarif: true\n      }\n    }\n  ]\n  // ...\n};\n")),(0,i.yg)("p",null,"{% endcode %}"))}u.isMDXComponent=!0}}]);